import { suiEncode } from "../packages/client/src/suiEncode";

describe("suiEncode", () => {
  it("should encode type arguments, objects and message correctly", async () => {
    const input = {
      typeArguments: [
        "0xa6ea2f0366b5421769592ecfff38dfa0ca8c7688dcd35cea97f3a05c9a70af7d::token::TOKEN",
      ],
      objects: [
        "0xd61e25e37446c9c79eb0b3f7d3fef84a801afa2015b683a60c9376b0e3f28f08",
        "0xd5691cb352d2b168f98dff8b33fbae183e5c57c992404928aef0471f5caa33c1",
        "0x2379b1df8fc7334876cd9cd32ba080880e5e72e36c3da3a756aa4f06ee9857d5",
        "0xfdd73b0a81e04cc8736c2b7ba7c45e6ac7e85b70c705e6ce0a52da7934e99421",
      ],
      data: "0x2ed2e19c81dbc818013980d44617e0488cac79a18f68106c2cae7bb4998f8a84",
    };

    const expected =
      "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000503078613665613266303336366235343231373639353932656366666633386466613063613863373638386463643335636561393766336130356339613730616637643a3a746f6b656e3a3a544f4b454e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004d61e25e37446c9c79eb0b3f7d3fef84a801afa2015b683a60c9376b0e3f28f08d5691cb352d2b168f98dff8b33fbae183e5c57c992404928aef0471f5caa33c12379b1df8fc7334876cd9cd32ba080880e5e72e36c3da3a756aa4f06ee9857d5fdd73b0a81e04cc8736c2b7ba7c45e6ac7e85b70c705e6ce0a52da7934e9942100000000000000000000000000000000000000000000000000000000000000202ed2e19c81dbc818013980d44617e0488cac79a18f68106c2cae7bb4998f8a84";

    const result = await suiEncode(input);
    expect(result).toBe(expected);
  });
});
