/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestUniswapRouter,
  TestUniswapRouterInterface,
} from "../../../contracts/shared/TestUniswapRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AdditionsOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "Expired",
    type: "error",
  },
  {
    inputs: [],
    name: "IdenticalAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientInputAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientOutputAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPath",
    type: "error",
  },
  {
    inputs: [],
    name: "MultiplicationsOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "SubtractionsUnderflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03460cd57601f611adc38819003918201601f19168301916001600160401b0383118484101760d257808492604094855283398101031260cd57604b602060458360e8565b920160e8565b9060805260a0526040516119e090816100fc823960805181818161013d015281816103ac015281816104a5015281816104eb0152818161056801528181610755015281816108820152818161091d015281816109a70152818161139701526116bf015260a051818181601f0152818161010601528181610705015261097e0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820360cd5756fe6080604052600436101561004f575b361561001957600080fd5b61004d337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610ee0565b005b6000803560e01c806302751cec1461095b578063054d50d4146109415780631f00ca741461090557806338ed17391461086157806385f8c259146108475780638803dbee14610734578063ad5c4648146106ef578063ad615dec146106cd578063baa2abde1461051a578063c45a0155146104d5578063d06ca61f1461048d578063e8e33700146103395763f305d719146100ea575061000e565b6100f336610c80565b959394929095421161032a579061012f917f00000000000000000000000000000000000000000000000000000000000000009534908786611692565b94909361016a8561016183867f0000000000000000000000000000000000000000000000000000000000000000611233565b809533906112ac565b6001600160a01b0316803b1561031b57604051630d0e30db60e41b815284816004818a865af1801561031f57908591610306575b505060405163a9059cbb60e01b81526001600160a01b038416600482015260248101879052906020908290604490829088905af19081156102fb576020926101f286959360249387916102ce575b50610ee0565b6040516335313c2160e11b81526001600160a01b0391821660048201529586938492165af19182156102c1578192610288575b50833411610254575b5061025090604051938493846040919493926060820195825260208201520152565b0390f35b8334039034821161027457509061026e6102509233610f3d565b9061022e565b634e487b7160e01b81526011600452602490fd5b9091506020813d6020116102b9575b816102a460209383610ce0565b810103126102b457519038610225565b600080fd5b3d9150610297565b50604051903d90823e3d90fd5b6102ee9150863d88116102f4575b6102e68183610ce0565b810190610ec8565b386101ec565b503d6102dc565b6040513d86823e3d90fd5b8161031091610ce0565b61031b57833861019e565b8380fd5b6040513d87823e3d90fd5b630407b05b60e31b8452600484fd5b503461048a5761010036600319011261048a57610354610c54565b9061035d610c6a565b60c4356001600160a01b03811690819003610486574260e4351061047757916020819260246103e29561039c60a435608435606435604435878d611692565b89856103db6103d0859c9598859e7f0000000000000000000000000000000000000000000000000000000000000000611233565b9788809433906112ac565b33906112ac565b6040516335313c2160e11b815260048101919091529485928391906001600160a01b03165af190811561046b5790610437575b6102509150604051938493846040919493926060820195825260208201520152565b506020813d602011610463575b8161045160209383610ce0565b810103126102b4576102509051610415565b3d9150610444565b604051903d90823e3d90fd5b630407b05b60e31b8352600483fd5b8280fd5b80fd5b503461048a576102506104c96104a236610d8b565b907f0000000000000000000000000000000000000000000000000000000000000000611175565b60405191829182610dcf565b503461048a578060031936011261048a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461048a5760e036600319011261048a57610534610c54565b61053c610c6a565b9060a4356001600160a01b0381169081900361031b574260c4351061032a57906105cc849261058c85847f0000000000000000000000000000000000000000000000000000000000000000611233565b6040516323b872dd60e01b81523360048201526001600160a01b039091166024820181905260448035908301529092909190602090849081906064820190565b038188865af190811561031f576040936024926106b0575b508351958693849263226bf2d160e21b845260048401525af19283156102fb5784928594610672575b506106189082611639565b506001600160a01b0391821691160361066d57905b606435821061065e57608435811061064f576040809350519182526020820152f35b63ef71d09160e01b8352600483fd5b638dc525d160e01b8352600483fd5b61062d565b925092506040823d6040116106a8575b8161068f60409383610ce0565b8101031261031b5761061860208351930151939061060d565b3d9150610682565b6106c89060203d6020116102f4576102e68183610ce0565b6105e4565b503461048a5760206106e76106e136610cc6565b916115fb565b604051908152f35b503461048a578060031936011261048a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461048a5761074336610e09565b959192939490954211610838576107877f000000000000000000000000000000000000000000000000000000000000000091610780368688610d30565b9083611098565b9461079186610e7d565b5111610829578215610815576107a684610eb4565b916107b085610eb4565b9084600110156108015750926107f46107fb936107e287946102509a976107dc60206104c99b01610eb4565b91611233565b6107eb89610e7d565b519133906112ac565b3691610d30565b8361138f565b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b82526032600452602482fd5b63098fb56160e01b8252600482fd5b630407b05b60e31b8252600482fd5b503461048a5760206106e761085b36610cc6565b91611580565b503461048a5761087036610e09565b959192939490954211610838576108b47f0000000000000000000000000000000000000000000000000000000000000000916108ad368688610d30565b9083611175565b94855160001981019081116108f1576108cd9087610ea0565b51106108e2578215610815576107a684610eb4565b6342301c2360e01b8252600482fd5b634e487b7160e01b84526011600452602484fd5b503461048a576102506104c961091a36610d8b565b907f0000000000000000000000000000000000000000000000000000000000000000611098565b503461048a5760206106e761095536610cc6565b91610fe6565b503461048a5761096a36610c80565b959490929391954211610c45578495610a047f00000000000000000000000000000000000000000000000000000000000000009360206109cb86867f0000000000000000000000000000000000000000000000000000000000000000611233565b6040516323b872dd60e01b81523360048201526001600160a01b0390911660248201819052604482019390935292839081906064820190565b03818b855af1918215610c3a57604092610c1d575b50602482518099819363226bf2d160e21b83523060048401525af1958615610c125787908897610bd4575b50610a4f8484611639565b506001600160a01b03848116911603610bce5795945b8610610bbf578410610bb05760405163a9059cbb60e01b602082019081526001600160a01b038516602483015260448201879052879283929091908390610ab981606481015b03601f198101835282610ce0565b51925af1610ac5610efd565b81610b81575b5015610b3c5784906001600160a01b0316803b15610b38578190602460405180948193632e1a7d4d60e01b83528860048401525af1801561031f57916040958492610b1c94610b28575b5050610f3d565b82519182526020820152f35b81610b3291610ce0565b38610b15565b5080fd5b60405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606490fd5b8051801592508215610b96575b505038610acb565b610ba99250602080918301019101610ec8565b3880610b8e565b63ef71d09160e01b8652600486fd5b638dc525d160e01b8752600487fd5b94610a65565b9650506040863d604011610c0a575b81610bf060409383610ce0565b81010312610c0657602086519601519538610a44565b8680fd5b3d9150610be3565b6040513d89823e3d90fd5b610c359060203d6020116102f4576102e68183610ce0565b610a19565b6040513d8a823e3d90fd5b630407b05b60e31b8552600485fd5b600435906001600160a01b03821682036102b457565b602435906001600160a01b03821682036102b457565b60c09060031901126102b4576004356001600160a01b03811681036102b457906024359060443590606435906084356001600160a01b03811681036102b4579060a43590565b60609060031901126102b457600435906024359060443590565b90601f8019910116810190811067ffffffffffffffff821117610d0257604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610d025760051b60200190565b9291610d3b82610d18565b93610d496040519586610ce0565b602085848152019260051b81019182116102b457915b818310610d6b57505050565b82356001600160a01b03811681036102b457815260209283019201610d5f565b9060406003198301126102b457600435916024359067ffffffffffffffff82116102b457806023830112156102b457816024610dcc93600401359101610d30565b90565b602060408183019282815284518094520192019060005b818110610df35750505090565b8251845260209384019390920191600101610de6565b9060a06003198301126102b457600435916024359160443567ffffffffffffffff81116102b457826023820112156102b45780600401359267ffffffffffffffff84116102b45760248460051b830101116102b45760240191906064356001600160a01b03811681036102b4579060843590565b805115610e8a5760200190565b634e487b7160e01b600052603260045260246000fd5b8051821015610e8a5760209160051b010190565b356001600160a01b03811681036102b45790565b908160209103126102b4575180151581036102b45790565b15610ee757565b634e487b7160e01b600052600160045260246000fd5b3d15610f38573d9067ffffffffffffffff8211610d025760405191610f2c601f8201601f191660200184610ce0565b82523d6000602084013e565b606090565b6000809160209360405190610f528683610ce0565b83825285820191601f19870136843751925af1610f6d610efd565b5015610f765750565b6084906040519062461bcd60e51b82526004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201526213115160ea1b6064820152fd5b8115610fd0570490565b634e487b7160e01b600052601260045260246000fd5b9190918015611055578215801561104d575b61103c5761101261100b61101892611829565b9283611892565b9261186a565b90810190811061102b57610dcc91610fc6565b63a259879560e01b60005260046000fd5b63bb55fd2760e01b60005260046000fd5b508115610ff8565b63098fb56160e01b60005260046000fd5b9061107082610d18565b61107d6040519182610ce0565b828152809261108e601f1991610d18565b0190602036910137565b9092916002815110611164576110ae8151611066565b938451600019810190811161114e576110c79086610ea0565b528051600019810190811161114e57805b6110e157505050565b600019810181811161114e5761113d6111366111256001600160a01b036111088588610ea0565b51166001600160a01b0361111c8789610ea0565b511690886118d7565b90611130868b610ea0565b51611580565b9187610ea0565b52801561114e5760001901806110d8565b634e487b7160e01b600052601160045260246000fd5b6320db826760e01b60005260046000fd5b92919260028451106111645761118b8451611066565b9161119583610e7d565b5260005b8451600019810190811161114e5781101561120e576001600160a01b036111c08287610ea0565b5116906001810180821161114e5760019261120790611200906111ef906001600160a01b0361111c868d610ea0565b906111fa868a610ea0565b51610fe6565b9186610ea0565b5201611199565b50509150565b908160209103126102b457516001600160a01b03811681036102b45790565b60405163e6a4390560e01b81526001600160a01b039283166004820152928216602484015260209183916044918391165afa9081156112a057600091611277575090565b610dcc915060203d602011611299575b6112918183610ce0565b810190611214565b503d611287565b6040513d6000823e3d90fd5b6040516323b872dd60e01b602082019081526001600160a01b03938416602483015293909216604483015260648201939093526000928392909183906112f58160848101610aab565b51925af1611301610efd565b81611360575b501561130f57565b60405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b6064820152608490fd5b8051801592508215611375575b505038611307565b6113889250602080918301019101610ec8565b388061136d565b9291600060207f0000000000000000000000000000000000000000000000000000000000000000825b8551600019810190811161114e57811015611576576001600160a01b036113df8288610ea0565b51166001820180831161114e576001600160a01b036113fe828a610ea0565b511661140a8184611639565b50926114186000938d610ea0565b51936001600160a01b0316810361156f578293905b8a5160011981019081116115515786101561156557600286018087116115515761148290611471906001600160a01b0390611468908f610ea0565b5116858a611233565b935b6001600160a01b039289611233565b1691604051916114928984610ce0565b84835289368a850137833b1561154d5760405163022c0d9f60e01b8152600481019690965260248601526001600160a01b03166044850152608060648501528051608485018190528392859290919089855b838110611532575050508360a484838383839684010152601f801991011681010301925af180156102c157906001939291611522575b5050016113b8565b61152b91610ce0565b388061151a565b80830182015189820160a401528796508895508b91016114e4565b8480fd5b634e487b7160e01b85526011600452602485fd5b6114828a93611473565b829061142d565b5050505050509050565b919082156115ea57801580156115e2575b61103c576115a2836115a792611892565b61186a565b908083116115d1576115c3926115bd9103611829565b90610fc6565b6001810190811061102b5790565b631a0b9f1f60e21b60005260046000fd5b508115611591565b6342301c2360e01b60005260046000fd5b80156116285781158015611620575b61103c57610dcc9261161b91611892565b610fc6565b50821561160a565b632ca2f52b60e11b60005260046000fd5b9091906001600160a01b0380841690821680821461168157101561167c57915b906001600160a01b0383161561166b57565b63d92e233d60e01b60005260046000fd5b611659565b630bd969eb60e41b60005260046000fd5b60405163e6a4390560e01b81526001600160a01b03828116600483015283811660248301529396949594937f0000000000000000000000000000000000000000000000000000000000000000908116939291602081604481885afa9081156112a05760009161180a575b506001600160a01b0316156117a1575b61171693506118d7565b9290801580611799575b1561172d57505050509091565b61173c848288979596976115fb565b9483861161176357505050508110611752579091565b63ef71d09160e01b60005260046000fd5b8361177e9496506117759395506115fb565b93841115610ee0565b8210611788579091565b638dc525d160e01b60005260046000fd5b508315611720565b6040516364e329cb60e11b81526001600160a01b0383811660048301528416602482015293602090859060449082906000905af19384156112a057611716946117eb575b5061170c565b6118039060203d602011611299576112918183610ce0565b50386117e5565b611823915060203d602011611299576112918183610ce0565b386116fc565b6000908015908115611850575b501561183f5790565b632bcb93b560e11b60005260046000fd5b9150506103e56118638183029283610fc6565b1438611836565b600090801590811561187f57501561183f5790565b9150506103e86118638183029283610fc6565b9060009180159182156118aa575b50501561183f5790565b808202935091506118bb9083610fc6565b1438806118a0565b51906001600160701b03821682036102b457565b9060606004926118fc6118ea8685611639565b50956001600160a01b03928590611233565b1660405193848092630240bc6b60e21b82525afa9182156112a057600090819361194a575b506001600160701b03928316939216916001600160a01b039182169116036119465791565b9091565b92506060833d6060116119a2575b8161196560609383610ce0565b8101031261048a57611976836118c3565b906040611985602086016118c3565b94015163ffffffff81160361048a57506001600160701b03611921565b3d915061195856fea26469706673582212206700b602d379deb2e7682bb41e3d93df2ecdf1594eeaba1a8b04a7d2398e71cc64736f6c634300081a0033";

type TestUniswapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswapRouter__factory extends ContractFactory {
  constructor(...args: TestUniswapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factory: AddressLike,
    _WETH: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_factory, _WETH, overrides || {});
  }
  override deploy(
    _factory: AddressLike,
    _WETH: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_factory, _WETH, overrides || {}) as Promise<
      TestUniswapRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestUniswapRouter__factory {
    return super.connect(runner) as TestUniswapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapRouterInterface {
    return new Interface(_abi) as TestUniswapRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestUniswapRouter {
    return new Contract(address, _abi, runner) as unknown as TestUniswapRouter;
  }
}
