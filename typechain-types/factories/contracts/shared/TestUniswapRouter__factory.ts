/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestUniswapRouter,
  TestUniswapRouterInterface,
} from "../../../contracts/shared/TestUniswapRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AdditionsOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "Expired",
    type: "error",
  },
  {
    inputs: [],
    name: "IdenticalAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientInputAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientOutputAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPath",
    type: "error",
  },
  {
    inputs: [],
    name: "MultiplicationsOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "SubtractionsUnderflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03460cd57601f611a1c38819003918201601f19168301916001600160401b0383118484101760d157808492604094855283398101031260cd57604b602060458360e5565b920160e5565b9060805260a05260405161192390816100f9823960805181818161013b015281816103a9015281816104a2015281816104e801528181610565015281816107520152818161087f01528181610919015281816109a001528181611352015261162d015260a051818181601e015281816101040152818161070201526109770152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b038216820360cd5756fe6080604052600436101561004e575b3615610018575f80fd5b61004c337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610ec0565b005b5f803560e01c806302751cec14610957578063054d50d41461093d5780631f00ca741461090157806338ed17391461085e57806385f8c259146108445780638803dbee14610731578063ad5c4648146106ec578063ad615dec146106ca578063baa2abde14610517578063c45a0155146104d2578063d06ca61f1461048a578063e8e33700146103365763f305d719146100e8575061000e565b6100f136610c65565b9593949290954211610327579061012d917f00000000000000000000000000000000000000000000000000000000000000009534908786611600565b9490936101688561015f83867f00000000000000000000000000000000000000000000000000000000000000006111fa565b80953390611266565b6001600160a01b0316803b1561031857604051630d0e30db60e41b815284816004818a865af1801561031c57908591610303575b505060405163a9059cbb60e01b81526001600160a01b038416600482015260248101879052906020908290604490829088905af19081156102f8576020926101f086959360249387916102cb575b50610ec0565b6040516335313c2160e11b81526001600160a01b0391821660048201529586938492165af19182156102be578192610286575b50833411610252575b5061024e90604051938493846040919493926060820195825260208201520152565b0390f35b8334039034821161027257509061026c61024e9233610f1a565b9061022c565b634e487b7160e01b81526011600452602490fd5b9091506020813d6020116102b6575b816102a260209383610cc5565b810103126102b25751905f610223565b5f80fd5b3d9150610295565b50604051903d90823e3d90fd5b6102eb9150863d88116102f1575b6102e38183610cc5565b810190610ea8565b5f6101ea565b503d6102d9565b6040513d86823e3d90fd5b8161030d91610cc5565b61031857835f61019c565b8380fd5b6040513d87823e3d90fd5b630407b05b60e31b8452600484fd5b50346104875761010036600319011261048757610351610c39565b9061035a610c4f565b60c4356001600160a01b03811690819003610483574260e4351061047457916020819260246103df9561039960a435608435606435604435878d611600565b89856103d86103cd859c9598859e7f00000000000000000000000000000000000000000000000000000000000000006111fa565b978880943390611266565b3390611266565b6040516335313c2160e11b815260048101919091529485928391906001600160a01b03165af19081156104685790610434575b61024e9150604051938493846040919493926060820195825260208201520152565b506020813d602011610460575b8161044e60209383610cc5565b810103126102b25761024e9051610412565b3d9150610441565b604051903d90823e3d90fd5b630407b05b60e31b8352600483fd5b8280fd5b80fd5b50346104875761024e6104c661049f36610d6e565b907f000000000000000000000000000000000000000000000000000000000000000061113e565b60405191829182610db2565b50346104875780600319360112610487576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346104875760e036600319011261048757610531610c39565b610539610c4f565b9060a4356001600160a01b03811690819003610318574260c4351061032757906105c9849261058985847f00000000000000000000000000000000000000000000000000000000000000006111fa565b6040516323b872dd60e01b81523360048201526001600160a01b039091166024820181905260448035908301529092909190602090849081906064820190565b038188865af190811561031c576040936024926106ad575b508351958693849263226bf2d160e21b845260048401525af19283156102f8578492859461066f575b5061061590826115ab565b506001600160a01b0391821691160361066a57905b606435821061065b57608435811061064c576040809350519182526020820152f35b63ef71d09160e01b8352600483fd5b638dc525d160e01b8352600483fd5b61062a565b925092506040823d6040116106a5575b8161068c60409383610cc5565b810103126103185761061560208351930151939061060a565b3d915061067f565b6106c59060203d6020116102f1576102e38183610cc5565b6105e1565b50346104875760206106e46106de36610cab565b9161156f565b604051908152f35b50346104875780600319360112610487576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346104875761074036610deb565b959192939490954211610835576107847f00000000000000000000000000000000000000000000000000000000000000009161077d368688610d13565b9083611069565b9461078e86610e5f565b5111610826578215610812576107a384610e94565b916107ad85610e94565b9084600110156107fe5750926107f16107f8936107df879461024e9a976107d960206104c69b01610e94565b916111fa565b6107e889610e5f565b51913390611266565b3691610d13565b83611348565b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b82526032600452602482fd5b63098fb56160e01b8252600482fd5b630407b05b60e31b8252600482fd5b50346104875760206106e461085836610cab565b916114f8565b50346104875761086d36610deb565b959192939490954211610835576108b17f0000000000000000000000000000000000000000000000000000000000000000916108aa368688610d13565b908361113e565b9485515f1981019081116108ed576108c99087610e80565b51106108de578215610812576107a384610e94565b6342301c2360e01b8252600482fd5b634e487b7160e01b84526011600452602484fd5b50346104875761024e6104c661091636610d6e565b907f0000000000000000000000000000000000000000000000000000000000000000611069565b50346104875760206106e461095136610cab565b91610fbd565b346102b25761096536610c65565b9490949391934211610c2a576109fd937f00000000000000000000000000000000000000000000000000000000000000009260206109c485857f00000000000000000000000000000000000000000000000000000000000000006111fa565b6040516323b872dd60e01b81523360048201526001600160a01b0390911660248201819052604482019390935296879081906064820190565b03815f855af1908115610b30575f96604092610c0d575b50602482518098819363226bf2d160e21b83523060048401525af1948515610b30575f905f96610bd3575b50610a4a84846115ab565b506001600160a01b03848116911603610bcd5794935b8510610bbe578310610baf5760405163a9059cbb60e01b602082019081526001600160a01b0387166024830152604482018690525f9283929091908390610ab481606481015b03601f198101835282610cc5565b51925af1610ac0610edb565b81610b80575b5015610b3b576001600160a01b0316803b156102b2575f8091602460405180948193632e1a7d4d60e01b83528760048401525af18015610b3057604094610b14928492610b20575b50610f1a565b82519182526020820152f35b5f610b2a91610cc5565b5f610b0e565b6040513d5f823e3d90fd5b60405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606490fd5b8051801592508215610b95575b505085610ac6565b610ba89250602080918301019101610ea8565b8580610b8d565b63ef71d09160e01b5f5260045ffd5b638dc525d160e01b5f5260045ffd5b93610a60565b9550506040853d604011610c05575b81610bef60409383610cc5565b810103126102b257602085519501519487610a3f565b3d9150610be2565b610c259060203d6020116102f1576102e38183610cc5565b610a14565b630407b05b60e31b5f5260045ffd5b600435906001600160a01b03821682036102b257565b602435906001600160a01b03821682036102b257565b60c09060031901126102b2576004356001600160a01b03811681036102b257906024359060443590606435906084356001600160a01b03811681036102b2579060a43590565b60609060031901126102b257600435906024359060443590565b90601f8019910116810190811067ffffffffffffffff821117610ce757604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff8111610ce75760051b60200190565b9291610d1e82610cfb565b93610d2c6040519586610cc5565b602085848152019260051b81019182116102b257915b818310610d4e57505050565b82356001600160a01b03811681036102b257815260209283019201610d42565b9060406003198301126102b257600435916024359067ffffffffffffffff82116102b257806023830112156102b257816024610daf93600401359101610d13565b90565b60206040818301928281528451809452019201905f5b818110610dd55750505090565b8251845260209384019390920191600101610dc8565b9060a06003198301126102b257600435916024359160443567ffffffffffffffff81116102b257826023820112156102b25780600401359267ffffffffffffffff84116102b25760248460051b830101116102b25760240191906064356001600160a01b03811681036102b2579060843590565b805115610e6c5760200190565b634e487b7160e01b5f52603260045260245ffd5b8051821015610e6c5760209160051b010190565b356001600160a01b03811681036102b25790565b908160209103126102b2575180151581036102b25790565b15610ec757565b634e487b7160e01b5f52600160045260245ffd5b3d15610f15573d9067ffffffffffffffff8211610ce75760405191610f0a601f8201601f191660200184610cc5565b82523d5f602084013e565b606090565b5f9190829160405190610f2e602083610cc5565b83825260208201915f36843751925af1610f46610edb565b5015610f4e57565b60405162461bcd60e51b815260206004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201526213115160ea1b6064820152608490fd5b8115610fa9570490565b634e487b7160e01b5f52601260045260245ffd5b91909180156110285782158015611020575b61101157610fe9610fe2610fef92611773565b92836117d8565b926117b1565b90810190811061100257610daf91610f9f565b63a259879560e01b5f5260045ffd5b63bb55fd2760e01b5f5260045ffd5b508115610fcf565b63098fb56160e01b5f5260045ffd5b9061104182610cfb565b61104e6040519182610cc5565b828152809261105f601f1991610cfb565b0190602036910137565b909291600281511061112f5761107f8151611037565b9384515f19810190811161111b576110979086610e80565b5280515f19810190811161111b57805b6110b057505050565b5f19810181811161111b5761110b6111046110f36001600160a01b036110d68588610e80565b51166001600160a01b036110ea8789610e80565b5116908861181c565b906110fe868b610e80565b516114f8565b9187610e80565b52801561111b575f1901806110a7565b634e487b7160e01b5f52601160045260245ffd5b6320db826760e01b5f5260045ffd5b929192600284511061112f576111548451611037565b9161115e83610e5f565b525f5b84515f19810190811161111b578110156111d5576001600160a01b036111878287610e80565b5116906001810180821161111b576001926111ce906111c7906111b6906001600160a01b036110ea868d610e80565b906111c1868a610e80565b51610fbd565b9186610e80565b5201611161565b50509150565b908160209103126102b257516001600160a01b03811681036102b25790565b60405163e6a4390560e01b81526001600160a01b039283166004820152928216602484015260209183916044918391165afa908115610b30575f9161123d575090565b610daf915060203d60201161125f575b6112578183610cc5565b8101906111db565b503d61124d565b6040516323b872dd60e01b602082019081526001600160a01b03938416602483015293909216604483015260648201939093525f928392909183906112ae8160848101610aa6565b51925af16112ba610edb565b81611319575b50156112c857565b60405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b6064820152608490fd5b805180159250821561132e575b50505f6112c0565b6113419250602080918301019101610ea8565b5f80611326565b602093925f9291907f0000000000000000000000000000000000000000000000000000000000000000845b84515f19810190811161111b578110156114ee576001600160a01b036113998287610e80565b5116906001810180821161111b576001600160a01b036113b98289610e80565b51166113d06113c882866115ab565b509288610e80565b51916001600160a01b031684036114e7575f91935b8851600119810190811161111b578410156114dd576002840180851161111b5761143a90611429906001600160a01b0390611420908d610e80565b511684896111fa565b925b6001600160a01b0392886111fa565b16604051946114498d87610cc5565b5f86528c8601938b368637823b156102b25760a45f95918692604051998a978896879463022c0d9f60e01b86526004860152602485015260018060a01b03166044840152608060648401525180918160848501528484015e8181018301849052601f01601f191681010301925af1918215610b30576001926114cd575b5001611373565b5f6114d791610cc5565b5f6114c6565b61143a879261142b565b5f936113e5565b5050505050509050565b919082156115605780158015611558575b6110115761151a8361151f926117d8565b6117b1565b908083116115495761153b926115359103611773565b90610f9f565b600181019081106110025790565b631a0b9f1f60e21b5f5260045ffd5b508115611509565b6342301c2360e01b5f5260045ffd5b801561159c5781158015611594575b61101157610daf9261158f916117d8565b610f9f565b50821561157e565b632ca2f52b60e11b5f5260045ffd5b9091906001600160a01b038084169082168082146115f15710156115ec57915b906001600160a01b038316156115dd57565b63d92e233d60e01b5f5260045ffd5b6115cb565b630bd969eb60e41b5f5260045ffd5b60405163e6a4390560e01b81526001600160a01b03828116600483015283811660248301529396949594937f0000000000000000000000000000000000000000000000000000000000000000908116939291602081604481885afa908115610b30575f91611754575b506001600160a01b0316156116ec575b611683935061181c565b92908015806116e4575b1561169a57505050509091565b6116a98482889795969761156f565b948386116116bf57505050508110610baf579091565b836116da9496506116d193955061156f565b93841115610ec0565b8210610bbe579091565b50831561168d565b6040516364e329cb60e11b81526001600160a01b0383811660048301528416602482015293602090859060449082905f905af1938415610b305761168394611735575b50611679565b61174d9060203d60201161125f576112578183610cc5565b505f61172f565b61176d915060203d60201161125f576112578183610cc5565b5f611669565b5f908015908115611797575b50156117885790565b632bcb93b560e11b5f5260045ffd5b9150506103e56117aa8183029283610f9f565b145f61177f565b5f9080159081156117c55750156117885790565b9150506103e86117aa8183029283610f9f565b905f9180159182156117ef575b5050156117885790565b808202935091506118009083610f9f565b145f806117e5565b51906001600160701b03821682036102b257565b90606060049261184161182f86856115ab565b50956001600160a01b039285906111fa565b1660405193848092630240bc6b60e21b82525afa918215610b30575f905f9361188e575b506001600160701b03928316939216916001600160a01b0391821691160361188a5791565b9091565b9250506060823d6060116118e5575b816118aa60609383610cc5565b810103126102b2576118bb82611808565b60406118c960208501611808565b93015163ffffffff8116036102b2576001600160701b03611865565b3d915061189d56fea26469706673582212203a7de96cc1d132fa3096f0f02d9b7025073ab75f8183a2e2201efed7fd319abd64736f6c634300081a0033";

type TestUniswapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswapRouter__factory extends ContractFactory {
  constructor(...args: TestUniswapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factory: AddressLike,
    _WETH: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_factory, _WETH, overrides || {});
  }
  override deploy(
    _factory: AddressLike,
    _WETH: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_factory, _WETH, overrides || {}) as Promise<
      TestUniswapRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestUniswapRouter__factory {
    return super.connect(runner) as TestUniswapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapRouterInterface {
    return new Interface(_abi) as TestUniswapRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestUniswapRouter {
    return new Contract(address, _abi, runner) as unknown as TestUniswapRouter;
  }
}
