/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockZRC20,
  MockZRC20Interface,
} from "../../../contracts/shared/MockZRC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasfee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolFlatFee",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "output",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasFeeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasFee_",
        type: "uint256",
      },
    ],
    name: "setGasFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gasFeeAddress_",
        type: "address",
      },
    ],
    name: "setGasFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawGasFee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161208138038061208183398181016040528101906100329190610537565b8181816003908161004391906107d9565b50806004908161005391906107d9565b50505061008d336100686100d660201b60201c565b60ff16600a6100779190610a0d565b856100829190610a58565b6100df60201b60201c565b30600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050610b8b565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101515760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101489190610adb565b60405180910390fd5b6101636000838361016760201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101b95780600260008282546101ad9190610af6565b9250508190555061028c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610245578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161023c93929190610b39565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102d55780600260008282540392505081905550610322565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161037f9190610b70565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6103b3816103a0565b81146103be57600080fd5b50565b6000815190506103d0816103aa565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610429826103e0565b810181811067ffffffffffffffff82111715610448576104476103f1565b5b80604052505050565b600061045b61038c565b90506104678282610420565b919050565b600067ffffffffffffffff821115610487576104866103f1565b5b610490826103e0565b9050602081019050919050565b60005b838110156104bb5780820151818401526020810190506104a0565b60008484015250505050565b60006104da6104d58461046c565b610451565b9050828152602081018484840111156104f6576104f56103db565b5b61050184828561049d565b509392505050565b600082601f83011261051e5761051d6103d6565b5b815161052e8482602086016104c7565b91505092915050565b6000806000606084860312156105505761054f610396565b5b600061055e868287016103c1565b935050602084015167ffffffffffffffff81111561057f5761057e61039b565b5b61058b86828701610509565b925050604084015167ffffffffffffffff8111156105ac576105ab61039b565b5b6105b886828701610509565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061061457607f821691505b602082108103610627576106266105cd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261068f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610652565b6106998683610652565b95508019841693508086168417925050509392505050565b6000819050919050565b60006106d66106d16106cc846103a0565b6106b1565b6103a0565b9050919050565b6000819050919050565b6106f0836106bb565b6107046106fc826106dd565b84845461065f565b825550505050565b600090565b61071961070c565b6107248184846106e7565b505050565b5b818110156107485761073d600082610711565b60018101905061072a565b5050565b601f82111561078d5761075e8161062d565b61076784610642565b81016020851015610776578190505b61078a61078285610642565b830182610729565b50505b505050565b600082821c905092915050565b60006107b060001984600802610792565b1980831691505092915050565b60006107c9838361079f565b9150826002028217905092915050565b6107e2826105c2565b67ffffffffffffffff8111156107fb576107fa6103f1565b5b61080582546105fc565b61081082828561074c565b600060209050601f8311600181146108435760008415610831578287015190505b61083b85826107bd565b8655506108a3565b601f1984166108518661062d565b60005b8281101561087957848901518255600182019150602085019450602081019050610854565b868310156108965784890151610892601f89168261079f565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156109315780860481111561090d5761090c6108ab565b5b600185161561091c5780820291505b808102905061092a856108da565b94506108f1565b94509492505050565b60008261094a5760019050610a06565b816109585760009050610a06565b816001811461096e5760028114610978576109a7565b6001915050610a06565b60ff84111561098a576109896108ab565b5b8360020a9150848211156109a1576109a06108ab565b5b50610a06565b5060208310610133831016604e8410600b84101617156109dc5782820a9050838111156109d7576109d66108ab565b5b610a06565b6109e984848460016108e7565b92509050818404811115610a00576109ff6108ab565b5b81810290505b9392505050565b6000610a18826103a0565b9150610a23836103a0565b9250610a507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461093a565b905092915050565b6000610a63826103a0565b9150610a6e836103a0565b9250828202610a7c816103a0565b91508282048414831517610a9357610a926108ab565b5b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac582610a9a565b9050919050565b610ad581610aba565b82525050565b6000602082019050610af06000830184610acc565b92915050565b6000610b01826103a0565b9150610b0c836103a0565b9250828201905080821115610b2457610b236108ab565b5b92915050565b610b33816103a0565b82525050565b6000606082019050610b4e6000830186610acc565b610b5b6020830185610b2a565b610b686040830184610b2a565b949350505050565b6000602082019050610b856000830184610b2a565b92915050565b6114e780610b9a6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063658612e9116100a2578063a9059cbb11610071578063a9059cbb146102ce578063c7012626146102fe578063d9eeebed1461032e578063dd62ed3e1461034d578063f7d8f6161461037d5761010b565b8063658612e914610246578063678edca31461026457806370a082311461028057806395d89b41146102b05761010b565b80632c27d3ab116100de5780632c27d3ab146101ac578063313ce567146101dc5780633e8a4ee1146101fa57806347e7ef24146102165761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b61011861039b565b6040516101259190610e82565b60405180910390f35b61014860048036038101906101439190610f42565b61042d565b6040516101559190610f9d565b60405180910390f35b610166610450565b6040516101739190610fc7565b60405180910390f35b61019660048036038101906101919190610fe2565b61045a565b6040516101a39190610f9d565b60405180910390f35b6101c660048036038101906101c1919061109a565b610489565b6040516101d3919061111d565b60405180910390f35b6101e46104fd565b6040516101f19190611154565b60405180910390f35b610214600480360381019061020f919061116f565b610506565b005b610230600480360381019061022b9190610f42565b61054a565b60405161023d9190610f9d565b60405180910390f35b61024e610556565b60405161025b9190610fc7565b60405180910390f35b61027e6004803603810190610279919061119c565b61055c565b005b61029a6004803603810190610295919061116f565b610566565b6040516102a79190610fc7565b60405180910390f35b6102b86105ae565b6040516102c59190610e82565b60405180910390f35b6102e860048036038101906102e39190610f42565b610640565b6040516102f59190610f9d565b60405180910390f35b610318600480360381019061031391906111c9565b610663565b6040516103259190610f9d565b60405180910390f35b610336610701565b604051610344929190611229565b60405180910390f35b61036760048036038101906103629190611252565b610732565b6040516103749190610fc7565b60405180910390f35b6103856107b9565b604051610392919061111d565b60405180910390f35b6060600380546103aa906112c1565b80601f01602080910402602001604051908101604052809291908181526020018280546103d6906112c1565b80156104235780601f106103f857610100808354040283529160200191610423565b820191906000526020600020905b81548152906001019060200180831161040657829003601f168201915b5050505050905090565b6000806104386107df565b90506104458185856107e7565b600191505092915050565b6000600254905090565b6000806104656107df565b90506104728582856107f9565b61047d85858561088d565b60019150509392505050565b60008085858590858761049c9190611321565b926104a99392919061135f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905082810151915050949350505050565b60006012905090565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001905092915050565b60065481565b8060068190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105bd906112c1565b80601f01602080910402602001604051908101604052809291908181526020018280546105e9906112c1565b80156106365780601f1061060b57610100808354040283529160200191610636565b820191906000526020600020905b81548152906001019060200180831161061957829003601f168201915b5050505050905090565b60008061064b6107df565b905061065881858561088d565b600191505092915050565b60008060208585905010156106855761067e85856000610981565b9050610694565b6106918585600c610981565b90505b3373ffffffffffffffffffffffffffffffffffffffff167f9ffbffc04a397460ee1dbe8c9503e098090567d6b7f4b3c02a8617d800b6d95586868660065460006040516106e595949392919061142c565b60405180910390a26106f78184610640565b9150509392505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600654915091509091565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6107f483838360016109f6565b505050565b60006108058484610732565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108875781811015610877578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161086e9392919061147a565b60405180910390fd5b610886848484840360006109f6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108ff5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108f6919061111d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109715760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610968919061111d565b60405180910390fd5b61097c838383610bcd565b505050565b600080848484906014866109959190611321565b926109a29392919061135f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905060148101519150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a685760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a5f919061111d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ada5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ad1919061111d565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610bc7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bbe9190610fc7565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c1f578060026000828254610c139190611321565b92505081905550610cf2565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cab578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ca29392919061147a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d3b5780600260008282540392505081905550610d88565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610de59190610fc7565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e2c578082015181840152602081019050610e11565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e5482610df2565b610e5e8185610dfd565b9350610e6e818560208601610e0e565b610e7781610e38565b840191505092915050565b60006020820190508181036000830152610e9c8184610e49565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ed982610eae565b9050919050565b610ee981610ece565b8114610ef457600080fd5b50565b600081359050610f0681610ee0565b92915050565b6000819050919050565b610f1f81610f0c565b8114610f2a57600080fd5b50565b600081359050610f3c81610f16565b92915050565b60008060408385031215610f5957610f58610ea4565b5b6000610f6785828601610ef7565b9250506020610f7885828601610f2d565b9150509250929050565b60008115159050919050565b610f9781610f82565b82525050565b6000602082019050610fb26000830184610f8e565b92915050565b610fc181610f0c565b82525050565b6000602082019050610fdc6000830184610fb8565b92915050565b600080600060608486031215610ffb57610ffa610ea4565b5b600061100986828701610ef7565b935050602061101a86828701610ef7565b925050604061102b86828701610f2d565b9150509250925092565b600080fd5b600080fd5b600080fd5b60008083601f84011261105a57611059611035565b5b8235905067ffffffffffffffff8111156110775761107661103a565b5b6020830191508360018202830111156110935761109261103f565b5b9250929050565b600080600080606085870312156110b4576110b3610ea4565b5b600085013567ffffffffffffffff8111156110d2576110d1610ea9565b5b6110de87828801611044565b945094505060206110f187828801610f2d565b925050604061110287828801610f2d565b91505092959194509250565b61111781610ece565b82525050565b6000602082019050611132600083018461110e565b92915050565b600060ff82169050919050565b61114e81611138565b82525050565b60006020820190506111696000830184611145565b92915050565b60006020828403121561118557611184610ea4565b5b600061119384828501610ef7565b91505092915050565b6000602082840312156111b2576111b1610ea4565b5b60006111c084828501610f2d565b91505092915050565b6000806000604084860312156111e2576111e1610ea4565b5b600084013567ffffffffffffffff811115611200576111ff610ea9565b5b61120c86828701611044565b9350935050602061121f86828701610f2d565b9150509250925092565b600060408201905061123e600083018561110e565b61124b6020830184610fb8565b9392505050565b6000806040838503121561126957611268610ea4565b5b600061127785828601610ef7565b925050602061128885828601610ef7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112d957607f821691505b6020821081036112ec576112eb611292565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132c82610f0c565b915061133783610f0c565b925082820190508082111561134f5761134e6112f2565b5b92915050565b600080fd5b600080fd5b6000808585111561137357611372611355565b5b838611156113845761138361135a565b5b6001850283019150848603905094509492505050565b600082825260208201905092915050565b82818337600083830152505050565b60006113c6838561139a565b93506113d38385846113ab565b6113dc83610e38565b840190509392505050565b6000819050919050565b6000819050919050565b600061141661141161140c846113e7565b6113f1565b610f0c565b9050919050565b611426816113fb565b82525050565b600060808201905081810360008301526114478187896113ba565b90506114566020830186610fb8565b6114636040830185610fb8565b611470606083018461141d565b9695505050505050565b600060608201905061148f600083018661110e565b61149c6020830185610fb8565b6114a96040830184610fb8565b94935050505056fea2646970667358221220b30e975ea29aa7b9b48f86636a08e59e029f8753a0ca6d341b9ceaf8c0f0061464736f6c634300081a0033";

type MockZRC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockZRC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockZRC20__factory extends ContractFactory {
  constructor(...args: MockZRC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockZRC20> {
    return super.deploy(
      initialSupply,
      name,
      symbol,
      overrides || {}
    ) as Promise<MockZRC20>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialSupply,
      name,
      symbol,
      overrides || {}
    );
  }
  override attach(address: string): MockZRC20 {
    return super.attach(address) as MockZRC20;
  }
  override connect(signer: Signer): MockZRC20__factory {
    return super.connect(signer) as MockZRC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockZRC20Interface {
    return new utils.Interface(_abi) as MockZRC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockZRC20 {
    return new Contract(address, _abi, signerOrProvider) as MockZRC20;
  }
}
