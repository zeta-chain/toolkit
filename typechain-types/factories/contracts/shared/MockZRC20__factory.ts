/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockZRC20,
  MockZRC20Interface,
} from "../../../contracts/shared/MockZRC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasfee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolFlatFee",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "output",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasFeeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasFee_",
        type: "uint256",
      },
    ],
    name: "setGasFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gasFeeAddress_",
        type: "address",
      },
    ],
    name: "setGasFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawGasFee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161208238038061208283398181016040528101906100329190610537565b8181816003908161004391906107d9565b50806004908161005391906107d9565b50505061008d336100686100d660201b60201c565b60ff16600a6100779190610a0d565b856100829190610a58565b6100df60201b60201c565b30600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050610b8b565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101515760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101489190610adb565b60405180910390fd5b6101636000838361016760201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101b95780600260008282546101ad9190610af6565b9250508190555061028c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610245578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161023c93929190610b39565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102d55780600260008282540392505081905550610322565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161037f9190610b70565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6103b3816103a0565b81146103be57600080fd5b50565b6000815190506103d0816103aa565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610429826103e0565b810181811067ffffffffffffffff82111715610448576104476103f1565b5b80604052505050565b600061045b61038c565b90506104678282610420565b919050565b600067ffffffffffffffff821115610487576104866103f1565b5b610490826103e0565b9050602081019050919050565b60005b838110156104bb5780820151818401526020810190506104a0565b60008484015250505050565b60006104da6104d58461046c565b610451565b9050828152602081018484840111156104f6576104f56103db565b5b61050184828561049d565b509392505050565b600082601f83011261051e5761051d6103d6565b5b815161052e8482602086016104c7565b91505092915050565b6000806000606084860312156105505761054f610396565b5b600061055e868287016103c1565b935050602084015167ffffffffffffffff81111561057f5761057e61039b565b5b61058b86828701610509565b925050604084015167ffffffffffffffff8111156105ac576105ab61039b565b5b6105b886828701610509565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061061457607f821691505b602082108103610627576106266105cd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261068f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610652565b6106998683610652565b95508019841693508086168417925050509392505050565b6000819050919050565b60006106d66106d16106cc846103a0565b6106b1565b6103a0565b9050919050565b6000819050919050565b6106f0836106bb565b6107046106fc826106dd565b84845461065f565b825550505050565b600090565b61071961070c565b6107248184846106e7565b505050565b5b818110156107485761073d600082610711565b60018101905061072a565b5050565b601f82111561078d5761075e8161062d565b61076784610642565b81016020851015610776578190505b61078a61078285610642565b830182610729565b50505b505050565b600082821c905092915050565b60006107b060001984600802610792565b1980831691505092915050565b60006107c9838361079f565b9150826002028217905092915050565b6107e2826105c2565b67ffffffffffffffff8111156107fb576107fa6103f1565b5b61080582546105fc565b61081082828561074c565b600060209050601f8311600181146108435760008415610831578287015190505b61083b85826107bd565b8655506108a3565b601f1984166108518661062d565b60005b8281101561087957848901518255600182019150602085019450602081019050610854565b868310156108965784890151610892601f89168261079f565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156109315780860481111561090d5761090c6108ab565b5b600185161561091c5780820291505b808102905061092a856108da565b94506108f1565b94509492505050565b60008261094a5760019050610a06565b816109585760009050610a06565b816001811461096e5760028114610978576109a7565b6001915050610a06565b60ff84111561098a576109896108ab565b5b8360020a9150848211156109a1576109a06108ab565b5b50610a06565b5060208310610133831016604e8410600b84101617156109dc5782820a9050838111156109d7576109d66108ab565b5b610a06565b6109e984848460016108e7565b92509050818404811115610a00576109ff6108ab565b5b81810290505b9392505050565b6000610a18826103a0565b9150610a23836103a0565b9250610a507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461093a565b905092915050565b6000610a63826103a0565b9150610a6e836103a0565b9250828202610a7c816103a0565b91508282048414831517610a9357610a926108ab565b5b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac582610a9a565b9050919050565b610ad581610aba565b82525050565b6000602082019050610af06000830184610acc565b92915050565b6000610b01826103a0565b9150610b0c836103a0565b9250828201905080821115610b2457610b236108ab565b5b92915050565b610b33816103a0565b82525050565b6000606082019050610b4e6000830186610acc565b610b5b6020830185610b2a565b610b686040830184610b2a565b949350505050565b6000602082019050610b856000830184610b2a565b92915050565b6114e880610b9a6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063658612e9116100a2578063a9059cbb11610071578063a9059cbb146102ce578063c7012626146102fe578063d9eeebed1461032e578063dd62ed3e1461034d578063f7d8f6161461037d5761010b565b8063658612e914610246578063678edca31461026457806370a082311461028057806395d89b41146102b05761010b565b80632c27d3ab116100de5780632c27d3ab146101ac578063313ce567146101dc5780633e8a4ee1146101fa57806347e7ef24146102165761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b61011861039b565b6040516101259190610e83565b60405180910390f35b61014860048036038101906101439190610f43565b61042d565b6040516101559190610f9e565b60405180910390f35b610166610450565b6040516101739190610fc8565b60405180910390f35b61019660048036038101906101919190610fe3565b61045a565b6040516101a39190610f9e565b60405180910390f35b6101c660048036038101906101c1919061109b565b610489565b6040516101d3919061111e565b60405180910390f35b6101e46104fd565b6040516101f19190611155565b60405180910390f35b610214600480360381019061020f9190611170565b610506565b005b610230600480360381019061022b9190610f43565b61054a565b60405161023d9190610f9e565b60405180910390f35b61024e610556565b60405161025b9190610fc8565b60405180910390f35b61027e6004803603810190610279919061119d565b61055c565b005b61029a60048036038101906102959190611170565b610566565b6040516102a79190610fc8565b60405180910390f35b6102b86105ae565b6040516102c59190610e83565b60405180910390f35b6102e860048036038101906102e39190610f43565b610640565b6040516102f59190610f9e565b60405180910390f35b610318600480360381019061031391906111ca565b610663565b6040516103259190610f9e565b60405180910390f35b610336610701565b60405161034492919061122a565b60405180910390f35b61036760048036038101906103629190611253565b610732565b6040516103749190610fc8565b60405180910390f35b6103856107b9565b604051610392919061111e565b60405180910390f35b6060600380546103aa906112c2565b80601f01602080910402602001604051908101604052809291908181526020018280546103d6906112c2565b80156104235780601f106103f857610100808354040283529160200191610423565b820191906000526020600020905b81548152906001019060200180831161040657829003601f168201915b5050505050905090565b6000806104386107df565b90506104458185856107e7565b600191505092915050565b6000600254905090565b6000806104656107df565b90506104728582856107f9565b61047d85858561088e565b60019150509392505050565b60008085858590858761049c9190611322565b926104a993929190611360565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905082810151915050949350505050565b60006012905090565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001905092915050565b60065481565b8060068190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105bd906112c2565b80601f01602080910402602001604051908101604052809291908181526020018280546105e9906112c2565b80156106365780601f1061060b57610100808354040283529160200191610636565b820191906000526020600020905b81548152906001019060200180831161061957829003601f168201915b5050505050905090565b60008061064b6107df565b905061065881858561088e565b600191505092915050565b60008060208585905010156106855761067e85856000610982565b9050610694565b6106918585600c610982565b90505b3373ffffffffffffffffffffffffffffffffffffffff167f9ffbffc04a397460ee1dbe8c9503e098090567d6b7f4b3c02a8617d800b6d95586868660065460006040516106e595949392919061142d565b60405180910390a26106f78184610640565b9150509392505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600654915091509091565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6107f483838360016109f7565b505050565b60006108058484610732565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108885781811015610878578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161086f9392919061147b565b60405180910390fd5b610887848484840360006109f7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109005760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108f7919061111e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109725760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610969919061111e565b60405180910390fd5b61097d838383610bce565b505050565b600080848484906014866109969190611322565b926109a393929190611360565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905060148101519150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a695760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a60919061111e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610adb5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ad2919061111e565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610bc8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bbf9190610fc8565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c20578060026000828254610c149190611322565b92505081905550610cf3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cac578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ca39392919061147b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d3c5780600260008282540392505081905550610d89565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610de69190610fc8565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e2d578082015181840152602081019050610e12565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e5582610df3565b610e5f8185610dfe565b9350610e6f818560208601610e0f565b610e7881610e39565b840191505092915050565b60006020820190508181036000830152610e9d8184610e4a565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eda82610eaf565b9050919050565b610eea81610ecf565b8114610ef557600080fd5b50565b600081359050610f0781610ee1565b92915050565b6000819050919050565b610f2081610f0d565b8114610f2b57600080fd5b50565b600081359050610f3d81610f17565b92915050565b60008060408385031215610f5a57610f59610ea5565b5b6000610f6885828601610ef8565b9250506020610f7985828601610f2e565b9150509250929050565b60008115159050919050565b610f9881610f83565b82525050565b6000602082019050610fb36000830184610f8f565b92915050565b610fc281610f0d565b82525050565b6000602082019050610fdd6000830184610fb9565b92915050565b600080600060608486031215610ffc57610ffb610ea5565b5b600061100a86828701610ef8565b935050602061101b86828701610ef8565b925050604061102c86828701610f2e565b9150509250925092565b600080fd5b600080fd5b600080fd5b60008083601f84011261105b5761105a611036565b5b8235905067ffffffffffffffff8111156110785761107761103b565b5b60208301915083600182028301111561109457611093611040565b5b9250929050565b600080600080606085870312156110b5576110b4610ea5565b5b600085013567ffffffffffffffff8111156110d3576110d2610eaa565b5b6110df87828801611045565b945094505060206110f287828801610f2e565b925050604061110387828801610f2e565b91505092959194509250565b61111881610ecf565b82525050565b6000602082019050611133600083018461110f565b92915050565b600060ff82169050919050565b61114f81611139565b82525050565b600060208201905061116a6000830184611146565b92915050565b60006020828403121561118657611185610ea5565b5b600061119484828501610ef8565b91505092915050565b6000602082840312156111b3576111b2610ea5565b5b60006111c184828501610f2e565b91505092915050565b6000806000604084860312156111e3576111e2610ea5565b5b600084013567ffffffffffffffff81111561120157611200610eaa565b5b61120d86828701611045565b9350935050602061122086828701610f2e565b9150509250925092565b600060408201905061123f600083018561110f565b61124c6020830184610fb9565b9392505050565b6000806040838503121561126a57611269610ea5565b5b600061127885828601610ef8565b925050602061128985828601610ef8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112da57607f821691505b6020821081036112ed576112ec611293565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132d82610f0d565b915061133883610f0d565b92508282019050808211156113505761134f6112f3565b5b92915050565b600080fd5b600080fd5b6000808585111561137457611373611356565b5b838611156113855761138461135b565b5b6001850283019150848603905094509492505050565b600082825260208201905092915050565b82818337600083830152505050565b60006113c7838561139b565b93506113d48385846113ac565b6113dd83610e39565b840190509392505050565b6000819050919050565b6000819050919050565b600061141761141261140d846113e8565b6113f2565b610f0d565b9050919050565b611427816113fc565b82525050565b600060808201905081810360008301526114488187896113bb565b90506114576020830186610fb9565b6114646040830185610fb9565b611471606083018461141e565b9695505050505050565b6000606082019050611490600083018661110f565b61149d6020830185610fb9565b6114aa6040830184610fb9565b94935050505056fea26469706673582212202bddfa4ad71fc34d73bacc1680ae3879539098f53407cd05c1ca20e4de50339f64736f6c634300081a0033";

type MockZRC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockZRC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockZRC20__factory extends ContractFactory {
  constructor(...args: MockZRC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialSupply: BigNumberish,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialSupply,
      name,
      symbol,
      overrides || {}
    );
  }
  override deploy(
    initialSupply: BigNumberish,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialSupply,
      name,
      symbol,
      overrides || {}
    ) as Promise<
      MockZRC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockZRC20__factory {
    return super.connect(runner) as MockZRC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockZRC20Interface {
    return new Interface(_abi) as MockZRC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockZRC20 {
    return new Contract(address, _abi, runner) as unknown as MockZRC20;
  }
}
