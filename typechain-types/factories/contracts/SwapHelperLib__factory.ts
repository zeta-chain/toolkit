/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SwapHelperLib,
  SwapHelperLibInterface,
} from "../../contracts/SwapHelperLib";

const _abi = [
  {
    inputs: [],
    name: "AdditionsOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "CantBeIdenticalAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "CantBeZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "IdenticalAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientInputAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPath",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPathLength",
    type: "error",
  },
  {
    inputs: [],
    name: "MultiplicationsOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughToPayGasFee",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongGasContract",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getMinOutAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "minOutAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "uniswapv2PairFor",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346019576107eb908161001e823930815050f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c90816354ce67ae1461015f575063c63585cc14610032575f80fd5b606036600319011261015b57610046610384565b61004e61039a565b906100576103b0565b916001600160a01b0380841690821680821461014c571015610146575b6001600160a01b03811615610137576040516bffffffffffffffffffffffff19606092831b811660208084019182529590931b166034820152602881526100bc6048826103c6565b51902090604051918383019160ff60f81b83526bffffffffffffffffffffffff199060601b16602184015260358301527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f6055830152605582526101216075836103c6565b905190206040516001600160a01b039091168152f35b633c5a83ed60e11b5f5260045ffd5b91610074565b63658f3e7f60e11b5f5260045ffd5b5f80fd5b608036600319011261015b57610173610384565b61017b61039a565b6101836103b0565b63c45a015560e01b845291606435906001600160a01b0316602085600481845afa908115610357576004955f92610362575b50602090604051968780926315ab88c960e31b82525afa948515610357575f95610326575b5061022f6040516101ec6060826103c6565b60028152604036602083013761020181610433565b6001600160a01b039095169485905261021981610440565b6001600160a01b03909616958690528383610464565b946040519361023f6080866103c6565b60038552606036602087013761025485610433565b5261025e84610440565b6001600160a01b03909116905282516002101561031257610283936060840152610464565b81515f1981019081116102de5761029a9083610450565b5181515f1981019081116102de576102b29083610450565b5110156102f2575080515f198101919082116102de576020916102d491610450565b515b604051908152f35b634e487b7160e01b5f52601160045260245ffd5b80515f198101925082116102de5760209161030c91610450565b516102d6565b634e487b7160e01b5f52603260045260245ffd5b61034991955060203d602011610350575b61034181836103c6565b8101906103fc565b93856101da565b503d610337565b6040513d5f823e3d90fd5b602091925061037d90823d84116103505761034181836103c6565b91906101b5565b600435906001600160a01b038216820361015b57565b602435906001600160a01b038216820361015b57565b604435906001600160a01b038216820361015b57565b90601f8019910116810190811067ffffffffffffffff8211176103e857604052565b634e487b7160e01b5f52604160045260245ffd5b9081602091031261015b57516001600160a01b038116810361015b5790565b67ffffffffffffffff81116103e85760051b60200190565b8051156103125760200190565b8051600110156103125760400190565b80518210156103125760209160051b010190565b929160028151106106df5780519161047b8361041b565b9261048960405194856103c6565b808452610498601f199161041b565b0136602085013782906104aa84610433565b525f5b82515f1981019081116102de578110156106d8576001600160a01b036104d38285610450565b511690600181018082116102de576001600160a01b036104f38287610450565b51168084146106c957808410156106c357835b6001600160a01b031680156106b45760405163e6a4390560e01b81526004810186905260248101929092526020826044816001600160a01b038e165afa918215610357576004926060915f91610696575b50604051630240bc6b60e21b815293849182906001600160a01b03165afa918215610357575f905f93610638575b506001600160701b03809116921694145f1461063357925b6105a78388610450565b518015610624578415801561061c575b61060d576105d16105ca6105d792610720565b9283610785565b9461075e565b9081019081106105fe576105f06105f791600195610702565b9187610450565b52016104ad565b63a259879560e01b5f5260045ffd5b63bb55fd2760e01b5f5260045ffd5b5081156105b7565b63098fb56160e01b5f5260045ffd5b61059d565b9250506060823d821161068e575b81610653606093836103c6565b8101031261015b57610664826106ee565b6040610672602085016106ee565b93015163ffffffff81160361015b576001600160701b03610585565b3d9150610646565b6106ae915060203d81116103505761034181836103c6565b5f610557565b63d92e233d60e01b5f5260045ffd5b80610506565b630bd969eb60e41b5f5260045ffd5b5093505050565b6320db826760e01b5f5260045ffd5b51906001600160701b038216820361015b57565b811561070c570490565b634e487b7160e01b5f52601260045260245ffd5b5f908015908115610744575b50156107355790565b632bcb93b560e11b5f5260045ffd5b9150506103e56107578183029283610702565b145f61072c565b5f9080159081156107725750156107355790565b9150506103e86107578183029283610702565b905f91801591821561079c575b5050156107355790565b808202935091506107ad9083610702565b145f8061079256fea264697066735822122098a8656c661c838d96bd73dbfe21cbab4a39147e2401d131caf037b6506cc9f664736f6c634300081a0033";

type SwapHelperLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapHelperLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapHelperLib__factory extends ContractFactory {
  constructor(...args: SwapHelperLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapHelperLib & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapHelperLib__factory {
    return super.connect(runner) as SwapHelperLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapHelperLibInterface {
    return new Interface(_abi) as SwapHelperLibInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapHelperLib {
    return new Contract(address, _abi, runner) as unknown as SwapHelperLib;
  }
}
