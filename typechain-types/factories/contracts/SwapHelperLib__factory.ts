/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SwapHelperLib,
  SwapHelperLibInterface,
} from "../../contracts/SwapHelperLib";

const _abi = [
  {
    inputs: [],
    name: "AdditionsOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "CantBeIdenticalAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "CantBeZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "IdenticalAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientInputAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPath",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPathLength",
    type: "error",
  },
  {
    inputs: [],
    name: "MultiplicationsOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughToPayGasFee",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongGasContract",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getMinOutAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "minOutAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "uniswapv2PairFor",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460195761081f908161001f823930815050f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816354ce67ae14610167575063c63585cc1461003557600080fd5b60603660031901126101625761004961039a565b6100516103b0565b9061005a6103c6565b916001600160a01b0380841690821680821461015157101561014b575b6001600160a01b0381161561013a576040516bffffffffffffffffffffffff19606092831b811660208084019182529590931b166034820152602881526100bf6048826103dc565b51902090604051918383019160ff60f81b83526bffffffffffffffffffffffff199060601b16602184015260358301527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f6055830152605582526101246075836103dc565b905190206040516001600160a01b039091168152f35b633c5a83ed60e11b60005260046000fd5b91610077565b63658f3e7f60e11b60005260046000fd5b600080fd5b60803660031901126101625761017b61039a565b6101836103b0565b61018b6103c6565b63c45a015560e01b845291606435906001600160a01b0316602085600481845afa90811561036c57600495600092610378575b50602090604051968780926315ab88c960e31b82525afa94851561036c5760009561033b575b5060609361023e6040516101f887826103dc565b60028152601f1987013660208301376102108161044b565b6001600160a01b039096169586905261022881610458565b6001600160a01b0390931692839052848461047c565b956040519461024e6080876103dc565b6003865260603660208801376102638661044b565b5261026d85610458565b6001600160a01b039091169052835160021015610325576102909484015261047c565b815160001981019081116102ee576102a89083610468565b51815160001981019081116102ee576102c19083610468565b511015610304575080516000198101919082116102ee576020916102e491610468565b515b604051908152f35b634e487b7160e01b600052601160045260246000fd5b80516000198101925082116102ee5760209161031f91610468565b516102e6565b634e487b7160e01b600052603260045260246000fd5b61035e91955060203d602011610365575b61035681836103dc565b810190610414565b93856101e4565b503d61034c565b6040513d6000823e3d90fd5b602091925061039390823d84116103655761035681836103dc565b91906101be565b600435906001600160a01b038216820361016257565b602435906001600160a01b038216820361016257565b604435906001600160a01b038216820361016257565b90601f8019910116810190811067ffffffffffffffff8211176103fe57604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261016257516001600160a01b03811681036101625790565b67ffffffffffffffff81116103fe5760051b60200190565b8051156103255760200190565b8051600110156103255760400190565b80518210156103255760209160051b010190565b9291600281511061070a5780519161049383610433565b926104a160405194856103dc565b8084526104b0601f1991610433565b0136602085013782906104c28461044b565b5260005b825160001981019081116102ee57811015610703576001600160a01b036104ed8285610468565b511690600181018082116102ee576001600160a01b0361050d8287610468565b51168084146106f257808410156106ec57835b6001600160a01b031680156106db5760405163e6a4390560e01b81526004810186905260248101929092526020826044816001600160a01b038e165afa91821561036c576004926060916000916106bd575b50604051630240bc6b60e21b815293849182906001600160a01b03165afa91821561036c57600090819361065b575b506001600160701b038091169216941460001461065657925b6105c48388610468565b518015610645578415801561063d575b61062c576105ee6105e76105f49261074f565b92836107b8565b94610790565b90810190811061061b5761060d6106149160019561072f565b9187610468565b52016104c6565b63a259879560e01b60005260046000fd5b63bb55fd2760e01b60005260046000fd5b5081156105d4565b63098fb56160e01b60005260046000fd5b6105ba565b92506060833d82116106b5575b81610675606093836103dc565b810103126106b2576106868361071b565b9060406106956020860161071b565b94015163ffffffff8116036106b257506001600160701b036105a1565b80fd5b3d9150610668565b6106d5915060203d81116103655761035681836103dc565b38610572565b63d92e233d60e01b60005260046000fd5b80610520565b630bd969eb60e41b60005260046000fd5b5093505050565b6320db826760e01b60005260046000fd5b51906001600160701b038216820361016257565b8115610739570490565b634e487b7160e01b600052601260045260246000fd5b6000908015908115610776575b50156107655790565b632bcb93b560e11b60005260046000fd5b9150506103e5610789818302928361072f565b143861075c565b60009080159081156107a55750156107655790565b9150506103e8610789818302928361072f565b9060009180159182156107d0575b5050156107655790565b808202935091506107e1908361072f565b1438806107c656fea264697066735822122070a6351669c1b21d268fb94ff8237dbe817be27204fac89d4dde0a6ccfcdbef464736f6c634300081a0033";

type SwapHelperLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapHelperLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapHelperLib__factory extends ContractFactory {
  constructor(...args: SwapHelperLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapHelperLib & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapHelperLib__factory {
    return super.connect(runner) as SwapHelperLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapHelperLibInterface {
    return new Interface(_abi) as SwapHelperLibInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapHelperLib {
    return new Contract(address, _abi, runner) as unknown as SwapHelperLib;
  }
}
