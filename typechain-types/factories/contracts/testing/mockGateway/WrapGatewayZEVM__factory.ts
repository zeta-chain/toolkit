/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  WrapGatewayZEVM,
  WrapGatewayZEVMInterface,
} from "../../../../contracts/testing/mockGateway/WrapGatewayZEVM";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nodeLogic",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "GATEWAY_ZEVM_IMPL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NODE_LOGIC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c034608d57601f61092138819003918201601f19168301916001600160401b038311848410176091578084926040948552833981010312608d57604b602060458360a5565b920160a5565b9060805260a05260405161086890816100b982396080518181816044015261012e015260a0518181816089015281816106750152818161072a01526107b50152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b0382168203608d5756fe60806040526004361015610015575b3661011a57005b5f3560e01c8063ced52b40146100775763d9d2f0740361000e5734610073575f366003190112610073576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5f80fd5b34610073575f366003190112610073577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166080908152602090f35b5f91031261007357565b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b038211176100fa57604052565b6100c5565b6001600160401b0381116100fa57601f01601f191660200190565b5f80604051368282378036810183815203907f00000000000000000000000000000000000000000000000000000000000000005af43d156101d3573d90610160826100ff565b9161016e60405193846100d9565b82523d5f602084013e5b1561018e5761018636610640565b602081519101f35b60405162461bcd60e51b815260206004820152601f60248201527f476174657761795a45564d2064656c656761746563616c6c206661696c6564006044820152606490fd5b606090610178565b909291928360041161007357831161007357600401916003190190565b81601f820112156100735780359061020f826100ff565b9261021d60405194856100d9565b8284526020838301011161007357815f926020809301838601378301015290565b6001600160a01b0381160361007357565b3590811515820361007357565b919082604091031261007357604051604081018181106001600160401b038211176100fa576040526020610296818395803585520161024f565b910152565b91909160a081840312610073576040519060a082018281106001600160401b038211176100fa57604052819381356102d28161023e565b83526102e06020830161024f565b602084015260408201356102f38161023e565b60408401526060820135916001600160401b0383116100735761031c60809392849383016101f8565b60608501520135910152565b9160e0838303126100735782356001600160401b038111610073578261034f9185016101f8565b9260208101359260408201356103648161023e565b9260608301356001600160401b03811161007357826103849185016101f8565b92610392836080830161025c565b9260c08201356001600160401b038111610073576103b0920161029b565b90565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9060018060a01b03825116815260208201511515602082015260018060a01b03604083015116604082015260808061041e606085015160a0606086015260a08501906103b3565b93015191015290565b93946103b0979561045761047a94610490969460018060a01b0316885261010060208901526101008801906103b3565b60408701939093526001600160a01b0316606086015284820360808601526103b3565b845160a0840152602090940151151560c0830152565b60e08184039101526103d7565b6040513d5f823e3d90fd5b906080828203126100735781356001600160401b03811161007357816104cf9184016101f8565b9260208301359260408101356104e48161023e565b9260608201356001600160401b038111610073576103b0920161029b565b6001600160a01b03909116815260a0602082018190526103b0959394919261052c918401906103b3565b60408301949094526001600160a01b031660608201528083036080909101526103d7565b91909160c0818403126100735780356001600160401b03811161007357836105799183016101f8565b9260208201356105888161023e565b9260408301356001600160401b03811161007357826105a89185016101f8565b926105b6836060830161025c565b9260a08201356001600160401b038111610073576103b0920161029b565b926103b096946106006106339461061d9460018060a01b0316875260e0602088015260e08701906103b3565b6001600160a01b03909216604086015284820360608601526103b3565b84516080840152602090940151151560a0830152565b60c08184039101526103d7565b5f356001600160e01b0319166306cb898360e01b8103610700575061066981610671925f6101db565b810190610550565b90937f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b15610073575f946106d3869260405198899788968795632c612e1f60e21b875260018060a01b03169033600488016105d4565b03925af180156106fb576106e5575b50565b806106f35f6106f9936100d9565b806100bb565b565b61049d565b637c0dcb5f60e01b8103610787575061071d81610725925f6101db565b8101906104a8565b9290917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b15610073575f80946106d3604051978896879586946308327f7960e41b865260018060a01b0316913360048701610502565b637b15118b60e01b146107975750565b6107a5816107ad925f6101db565b810190610328565b9194909390927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169290833b15610073576108155f96928793604051998a988997889663567ee10960e11b885260018060a01b0316913360048901610427565b03925af180156106fb57156106e257806106f35f6106f9936100d956fea26469706673582212208adfaabbbe80e94d1b41d85ba32be7372c9d8b25b56f717befb6291ed409f3de64736f6c634300081a0033";

type WrapGatewayZEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrapGatewayZEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrapGatewayZEVM__factory extends ContractFactory {
  constructor(...args: WrapGatewayZEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _gateway: AddressLike,
    _nodeLogic: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_gateway, _nodeLogic, overrides || {});
  }
  override deploy(
    _gateway: AddressLike,
    _nodeLogic: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_gateway, _nodeLogic, overrides || {}) as Promise<
      WrapGatewayZEVM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WrapGatewayZEVM__factory {
    return super.connect(runner) as WrapGatewayZEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrapGatewayZEVMInterface {
    return new Interface(_abi) as WrapGatewayZEVMInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WrapGatewayZEVM {
    return new Contract(address, _abi, runner) as unknown as WrapGatewayZEVM;
  }
}
