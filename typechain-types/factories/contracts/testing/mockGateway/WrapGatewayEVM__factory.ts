/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  WrapGatewayEVM,
  WrapGatewayEVMInterface,
} from "../../../../contracts/testing/mockGateway/WrapGatewayEVM";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nodeLogic",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GATEWAY_IMPL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NODE_LOGIC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346100d757601f610b9b38819003918201601f19168301916001600160401b038311848410176100db578084926060946040528339810103126100d757610047816100ef565b906040610056602083016100ef565b9101519160805260a05260c052604051610a97908161010482396080518181816086015261018d015260a05181818160d7015281816106dd015281816107b5015281816108670152818161091501526109c3015260c051818181604d0152818161073901528181610815015281816108c2015281816109770152610a1c0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100d75756fe608060405260043610610179575f3560e01c8063589dd5da1461007457806385e1f4d0146100365763ced52b4003610179576100c2565b34610070575f3660031901126100705760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5f80fd5b34610070575f366003190112610070577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166080908152602090f35b5f91031261007057565b34610070575f366003190112610070576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b634e487b7160e01b5f52604160045260245ffd5b60a0810190811067ffffffffffffffff82111761013657604052565b610106565b90601f8019910116810190811067ffffffffffffffff82111761013657604052565b67ffffffffffffffff811161013657601f01601f191660200190565b5f80604051368282378036810183815203907f00000000000000000000000000000000000000000000000000000000000000005af43d15610232573d906101bf8261015d565b916101cd604051938461013b565b82523d5f602084013e5b156101ed576101e536610698565b602081519101f35b60405162461bcd60e51b815260206004820152601b60248201527f476174657761792064656c656761746563616c6c206661696c656400000000006044820152606490fd5b6060906101d7565b906004116100705790600490565b909291928360041161007057831161007057600401916003190190565b356001600160e01b0319811692919060048210610280575050565b6001600160e01b031960049290920360031b82901b16169150565b6001600160a01b0381160361007057565b81601f82011215610070578035906102c38261015d565b926102d1604051948561013b565b8284526020838301011161007057815f926020809301838601378301015290565b35906102fd8261029b565b565b91909160a08184031261007057604051906103198261011a565b819381356103268161029b565b835260208201358015158103610070576020840152610347604083016102f2565b604084015260608201359167ffffffffffffffff83116100705761037160809392849383016102ac565b60608501520135910152565b916060838303126100705782356103938161029b565b92602081013567ffffffffffffffff811161007057836103b49183016102ac565b92604082013567ffffffffffffffff8111610070576103d392016102ff565b90565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9060018060a01b03825116815260208201511515602082015260018060a01b036040830151166040820152608080610441606085015160a0606086015260a08501906103d6565b93015191015290565b9081526001600160a01b0391821660208201529116604082015260a0606082018190526103d393919261047f918401906103d6565b9160808184039101526103fa565b6040513d5f823e3d90fd5b91909160a0818403126100705780356104b08161029b565b9260208201359260408301356104c58161029b565b92606081013567ffffffffffffffff811161007057836104e69183016102ac565b92608082013567ffffffffffffffff8111610070576103d392016102ff565b9081526001600160a01b0391821660208201529116604082015260608101919091525f608082015260e060a082018190526103d3939192610548918401906103d6565b9160c08184039101526103fa565b9081526001600160a01b039182166020820152918116604083015260608201929092529116608082015260e060a082018190526103d3939192610548918401906103d6565b906080828203126100705781356105b18161029b565b9260208301359260408101356105c68161029b565b92606082013567ffffffffffffffff8111610070576103d392016102ff565b9081526001600160a01b0391821660208201529116604082015260608101919091525f608082015260c060a082018190526103d3929101906103fa565b9081526001600160a01b039182166020820152918116604083015260608201929092529116608082015260c060a082018190526103d3929101906103fa565b9190916040818403126100705780356106798161029b565b92602082013567ffffffffffffffff8111610070576103d392016102ff565b6106b56106a5825f61023a565b6001600160e01b03199291610265565b16631c9ab25f60e21b810361078b57506106d3816106db925f610248565b810190610661565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169190823b156100705760405163ced6e79360e01b8152925f928492839185918391610761919034906001600160a01b0316337f0000000000000000000000000000000000000000000000000000000000000000600487016105e5565b03925af18015610786576107725750565b806107805f6102fd9361013b565b806100b8565b61048d565b630102614b60e41b810361083d57506107a8816107b0925f610248565b81019061059b565b9290917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156100705760405163ced6e79360e01b8152945f9486948593879385936107619391926001600160a01b0391821692909116337f000000000000000000000000000000000000000000000000000000000000000060048801610622565b63744b9b8b60e01b81036108ea575061085a81610862925f610248565b81019061037d565b9091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156100705760405163ad82a62760e01b8152935f93859384928692849261076192909134906001600160a01b0316337f000000000000000000000000000000000000000000000000000000000000000060048801610505565b631a13c76f60e31b810361099f57506109078161090f925f610248565b810190610498565b909391927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b156100705760405163ad82a62760e01b8152955f95879586948894869461076194919390926001600160a01b0392831692909116337f000000000000000000000000000000000000000000000000000000000000000060048901610556565b6306fb33ad60e21b146109b0575b50565b61085a816109be925f610248565b9091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610070576040516375e7f8e360e11b8152935f938593849286928492610a449290916001600160a01b0316337f00000000000000000000000000000000000000000000000000000000000000006004870161044a565b03925af1801561078657156109ad57806107805f6102fd9361013b56fea2646970667358221220ece3585da4a7675b09e92377fed123c4fe7d4344f9016dbafc261dcdb8efb96e64736f6c634300081a0033";

type WrapGatewayEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrapGatewayEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrapGatewayEVM__factory extends ContractFactory {
  constructor(...args: WrapGatewayEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _gateway: AddressLike,
    _nodeLogic: AddressLike,
    _chainId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _gateway,
      _nodeLogic,
      _chainId,
      overrides || {}
    );
  }
  override deploy(
    _gateway: AddressLike,
    _nodeLogic: AddressLike,
    _chainId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _gateway,
      _nodeLogic,
      _chainId,
      overrides || {}
    ) as Promise<
      WrapGatewayEVM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WrapGatewayEVM__factory {
    return super.connect(runner) as WrapGatewayEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrapGatewayEVMInterface {
    return new Interface(_abi) as WrapGatewayEVMInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WrapGatewayEVM {
    return new Contract(address, _abi, runner) as unknown as WrapGatewayEVM;
  }
}
