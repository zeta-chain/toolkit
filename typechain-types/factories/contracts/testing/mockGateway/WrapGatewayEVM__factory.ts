/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  WrapGatewayEVM,
  WrapGatewayEVMInterface,
} from "../../../../contracts/testing/mockGateway/WrapGatewayEVM";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nodeLogic",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GATEWAY_IMPL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NODE_LOGIC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0346100d757601f610ba438819003918201601f19168301916001600160401b038311848410176100db578084926060946040528339810103126100d757610047816100ef565b906040610056602083016100ef565b9101519160805260a05260c052604051610aa090816101048239608051818181608f0152610196015260a05181818160e0015281816106e6015281816107be015281816108700152818161091e01526109cc015260c0518181816056015281816107420152818161081e015281816108cb015281816109800152610a250152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100d75756fe60806040526004361015610015575b3661018257005b5f3560e01c8063589dd5da1461007d57806385e1f4d01461003f5763ced52b400361000e576100cb565b34610079575f3660031901126100795760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5f80fd5b34610079575f366003190112610079577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166080908152602090f35b5f91031261007957565b34610079575f366003190112610079576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b634e487b7160e01b5f52604160045260245ffd5b60a0810190811067ffffffffffffffff82111761013f57604052565b61010f565b90601f8019910116810190811067ffffffffffffffff82111761013f57604052565b67ffffffffffffffff811161013f57601f01601f191660200190565b5f80604051368282378036810183815203907f00000000000000000000000000000000000000000000000000000000000000005af43d1561023b573d906101c882610166565b916101d66040519384610144565b82523d5f602084013e5b156101f6576101ee366106a1565b602081519101f35b60405162461bcd60e51b815260206004820152601b60248201527f476174657761792064656c656761746563616c6c206661696c656400000000006044820152606490fd5b6060906101e0565b906004116100795790600490565b909291928360041161007957831161007957600401916003190190565b356001600160e01b0319811692919060048210610289575050565b6001600160e01b031960049290920360031b82901b16169150565b6001600160a01b0381160361007957565b81601f82011215610079578035906102cc82610166565b926102da6040519485610144565b8284526020838301011161007957815f926020809301838601378301015290565b3590610306826102a4565b565b91909160a081840312610079576040519061032282610123565b8193813561032f816102a4565b835260208201358015158103610079576020840152610350604083016102fb565b604084015260608201359167ffffffffffffffff83116100795761037a60809392849383016102b5565b60608501520135910152565b9160608383031261007957823561039c816102a4565b92602081013567ffffffffffffffff811161007957836103bd9183016102b5565b92604082013567ffffffffffffffff8111610079576103dc9201610308565b90565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9060018060a01b03825116815260208201511515602082015260018060a01b03604083015116604082015260808061044a606085015160a0606086015260a08501906103df565b93015191015290565b9081526001600160a01b0391821660208201529116604082015260a0606082018190526103dc939192610488918401906103df565b916080818403910152610403565b6040513d5f823e3d90fd5b91909160a0818403126100795780356104b9816102a4565b9260208201359260408301356104ce816102a4565b92606081013567ffffffffffffffff811161007957836104ef9183016102b5565b92608082013567ffffffffffffffff8111610079576103dc9201610308565b9081526001600160a01b0391821660208201529116604082015260608101919091525f608082015260e060a082018190526103dc939192610551918401906103df565b9160c0818403910152610403565b9081526001600160a01b039182166020820152918116604083015260608201929092529116608082015260e060a082018190526103dc939192610551918401906103df565b906080828203126100795781356105ba816102a4565b9260208301359260408101356105cf816102a4565b92606082013567ffffffffffffffff8111610079576103dc9201610308565b9081526001600160a01b0391821660208201529116604082015260608101919091525f608082015260c060a082018190526103dc92910190610403565b9081526001600160a01b039182166020820152918116604083015260608201929092529116608082015260c060a082018190526103dc92910190610403565b919091604081840312610079578035610682816102a4565b92602082013567ffffffffffffffff8111610079576103dc9201610308565b6106be6106ae825f610243565b6001600160e01b0319929161026e565b16631c9ab25f60e21b810361079457506106dc816106e4925f610251565b81019061066a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169190823b156100795760405163ced6e79360e01b8152925f92849283918591839161076a919034906001600160a01b0316337f0000000000000000000000000000000000000000000000000000000000000000600487016105ee565b03925af1801561078f5761077b5750565b806107895f61030693610144565b806100c1565b610496565b630102614b60e41b810361084657506107b1816107b9925f610251565b8101906105a4565b9290917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156100795760405163ced6e79360e01b8152945f94869485938793859361076a9391926001600160a01b0391821692909116337f00000000000000000000000000000000000000000000000000000000000000006004880161062b565b63744b9b8b60e01b81036108f357506108638161086b925f610251565b810190610386565b9091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156100795760405163ad82a62760e01b8152935f93859384928692849261076a92909134906001600160a01b0316337f00000000000000000000000000000000000000000000000000000000000000006004880161050e565b631a13c76f60e31b81036109a8575061091081610918925f610251565b8101906104a1565b909391927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b156100795760405163ad82a62760e01b8152955f95879586948894869461076a94919390926001600160a01b0392831692909116337f00000000000000000000000000000000000000000000000000000000000000006004890161055f565b6306fb33ad60e21b146109b9575b50565b610863816109c7925f610251565b9091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610079576040516375e7f8e360e11b8152935f938593849286928492610a4d9290916001600160a01b0316337f000000000000000000000000000000000000000000000000000000000000000060048701610453565b03925af1801561078f57156109b657806107895f6103069361014456fea2646970667358221220367dd9231fd79bc9af377bece1531dedc5e9840f2e9cc67125f9e51098924c8d64736f6c634300081a0033";

type WrapGatewayEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrapGatewayEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrapGatewayEVM__factory extends ContractFactory {
  constructor(...args: WrapGatewayEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _gateway: AddressLike,
    _nodeLogic: AddressLike,
    _chainId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _gateway,
      _nodeLogic,
      _chainId,
      overrides || {}
    );
  }
  override deploy(
    _gateway: AddressLike,
    _nodeLogic: AddressLike,
    _chainId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _gateway,
      _nodeLogic,
      _chainId,
      overrides || {}
    ) as Promise<
      WrapGatewayEVM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WrapGatewayEVM__factory {
    return super.connect(runner) as WrapGatewayEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrapGatewayEVMInterface {
    return new Interface(_abi) as WrapGatewayEVMInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WrapGatewayEVM {
    return new Contract(address, _abi, runner) as unknown as WrapGatewayEVM;
  }
}
